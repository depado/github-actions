name: Docker

on:
  workflow_call:
    inputs:
      runs-on:
        description: "Runner to use for the job"
        required: false
        type: string
        default: "ubuntu-latest"
      dockerfile:
        description: "Path to Dockerfile"
        required: false
        type: string
        default: "Dockerfile"
      context:
        description: "Build context path"
        required: false
        type: string
        default: "."
      platforms:
        description: "Comma-separated list of platforms for buildx (enables buildx automatically)"
        required: false
        type: string
        default: ""

      security-scan:
        description: "Enable container security scanning"
        required: false
        type: boolean
        default: true
      scan-severity:
        description: "Minimum severity for security scan (UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL)"
        required: false
        type: string
        default: "CRITICAL"

      enable-cleanup:
        description: "Enable cleanup of untagged container images"
        required: false
        type: boolean
        default: true
      min-versions-to-keep:
        description: "Minimum number of package versions to keep during cleanup"
        required: false
        type: number
        default: 5

      tag-suffix:
        description: 'Suffix to append to image tags (e.g., "-packed")'
        required: false
        type: string
        default: ""
      tag-latest:
        description: "Enable latest tag for this build"
        required: false
        type: boolean
        default: true

    secrets:
      cleanup-token:
        description: "Token for deleting package versions (requires packages:delete scope)"
        required: false

jobs:
  docker:
    name: "Build"
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && inputs.tag-latest }}
          flavor: |
            latest=false
            suffix=${{ inputs.tag-suffix }}

      - name: Set up Docker Buildx
        if: inputs.platforms != ''
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Log in to Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}

      - name: Run Trivy vulnerability scanner
        if: inputs.security-scan && github.event_name != 'pull_request'
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        env:
          TRIVY_DISABLE_VEX_NOTICE: true
        with:
          scan-type: "image"
          scan-ref: ${{ format('ghcr.io/{0}:{1}', github.repository, steps.meta.outputs.version) }}
          format: "table"
          severity: ${{ inputs.scan-severity }}
          exit-code: "1"
          output: "trivy-results.txt"

      - name: Display scan results
        if: inputs.security-scan && github.event_name != 'pull_request' && always()
        run: |
          echo "## 🔍 Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat trivy-results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Delete untagged container images
        if: github.event_name != 'pull_request' && inputs.enable-cleanup
        uses: actions/delete-package-versions@e5bc658cc4c965c472efe991f8beea3981499c55 # v5
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: container
          delete-only-untagged-versions: true
          min-versions-to-keep: ${{ inputs.min-versions-to-keep }}
          token: ${{ secrets.cleanup-token }}
